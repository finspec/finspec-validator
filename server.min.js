var express=require("express"),app=express(),bodyParser=require("body-parser"),fs=require("fs"),multer=require("multer"),upload=multer({dest:"uploads/",limits:{fileSize:3145728}}),Logger=require("./lib/logger.min"),Ajv=require("ajv"),ajv=Ajv();function readConfiguration(b){content=fs.readFileSync(b).toString();try{return JSON.parse(content)}catch(a){throw console.error("Exception parsing the config file, Exception: ",a),Error(a);}}var configs=readConfiguration("server.cfg");
log=Logger.initLogger("finspec-validator",configs.logfile,configs.loglevel);null==log&&(console.log("Error: Failed to create log file: ",logfile),process.exit(0));function compileSchema(b){schema=fs.readFileSync(b).toString();try{schema=JSON.parse(schema)}catch(a){throw console.error("Exception parsing schema file "+b+" Exception: ",a),Error(a);}ajv.addSchema(schema,"finspec-0.1")}var schemaFile="schemas/0.1.json",schema=compileSchema(schemaFile);app.use(bodyParser.urlencoded({extended:!0}));app.use(bodyParser.json());
function validateJSON(b){try{return JSON.parse(b)}catch(a){return null}}function getClientIp(b){var a=null,c=b.headers["x-forwarded-for"];c&&(a=c[0]);a||(a=b.connection.remoteAddress);return a}
app.post("/validate",upload.single("json"),function(b,a,c){log.info("Incoming validate from",getClientIp(b));"undefined"==typeof b.file?(a.writeHead(413,{"Content-Type":"text/plain"}),a.end("File too large."),b.connection.destroy(),log.warn("Validate rejected - too large")):10>b.file.size?(a.writeHead(413,{"Content-Type":"text/plain"}),a.end("File too small or empty."),b.connection.destroy(),log.warn("Validate rejected - too small")):(log.info("Upload stored",b.file),fs.readFile(b.file.path,function(c,
d){if(d=validateJSON(d))if(ajv.validate("finspec-0.1",d))a.json({pass:!0,message:"Good job!"}),log.info("File valid FinSpec");else{var e=ajv.errorsText();a.json({pass:!1,message:e});log.warn("File invalid FinSpec",e)}else a.writeHead(413,{"Content-Type":"text/plain"}),a.end("File was not valid JSON."),b.connection.destroy(),log.error("File invalid JSON")}))});var port=configs.port||8080;log.info("Starting validator on port "+port);app.listen(port);console.log("Magic happens on port "+port);
